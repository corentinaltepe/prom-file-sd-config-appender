name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: get_version
      uses: battila7/get-version-action@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.402
    - name: Install Dependencies
      run: dotnet restore
    - name: Copy License
      run: cp LICENSE PromFileSdConfigAppender/LICENSE.txt
    - name: Publish for Linux
      run: dotnet publish -c Release -r linux-x64
    - name: Publish for Windows
      run: dotnet publish -c Release -r win-x64
    
    # Zip binaries and add to the newly created release
    - uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r linux-x64.selfcontained.${{steps.get_version.outputs.version}}.zip PromFileSdConfigAppender/bin/Release/netcoreapp3.1/linux-x64/publish
    - uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r win-x64.selfcontained.${{steps.get_version.outputs.version}}.zip PromFileSdConfigAppender/bin/Release/netcoreapp3.1/win-x64/publish
    - uses: AButler/upload-release-assets@v2.0
      with:
        files: 'linux-x64.selfcontained.${{steps.get_version.outputs.version}}.zip'
        repo-token: ${{secrets.GITHUB_TOKEN}}
        release-tag: ${{steps.vars.outputs.tag}}    
    - uses: AButler/upload-release-assets@v2.0
      with:
        files: 'win-x64.selfcontained.${{steps.get_version.outputs.version}}.zip'
        repo-token: ${{secrets.GITHUB_TOKEN}}
        release-tag: ${{steps.vars.outputs.tag}}
    
    # Publish as a dotnet tool
    - name: Pack Dotnet Tool
      run: dotnet pack -p:PackageVersion=${{steps.get_version.outputs.version-without-v}}
    - name: Push Dotnet Tool
      run: dotnet nuget push PromFileSdConfigAppender/nupkg/PromFileSdConfigAppender.${{steps.get_version.outputs.version-without-v}}.nupkg --api-key ${{secrets.NUGET_TOKEN}} --source https://api.nuget.org/v3/index.json